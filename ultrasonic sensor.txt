# Ultrasonic Sensor

#print distance
import Rpi.GPIO as GPIO
import time
from time import sleep
GPIO.setmode(GPIO.BOARD)
GPIO.setwarnings(False)

TRIG=8
ECHO=12
GPIO.setup(TRIG,GPIO.OUT)
GPIO.setup(ECHO,GPIO.IN)
GPIO.output(TRIG,GPIO.LOW)
sleep(2)
GPIO.output(TRIG,GPIO.HIGH)
sleep(0.01)
GPIO.output(TRIG,GPIO.LOW)

while GPIO.input(ECHO)==0:
    start=time.time()
while GPIO.input(ECHO)==1:
    end=time.time()
    
distance=round((end-start)*17150,2)
print(distance)


#distance only printed when dist<15 and led also glows then
import Rpi.GPIO as GPIO
from time import sleep, time
GPIO.setmode(GPIO.BOARD)
GPIO.setwarnings(False)

TRIG=8
ECHO=12
LED=15

GPIO.setup(15,GPIO.OUT)
GPIO.setup(TRIG,GPIO.OUT)
GPIO.setup(ECHO,GPIO.IN)

GPIO.output(TRIG,GPIO.LOW)
sleep(2)
GPIO.output(TRIG,GPIO.HIGH)
sleep(0.01)
GPIO.output(TRIG,GPIO.LOW)

while GPIO.input(ECHO)==0:
    start=time.time()
while GPIO.input(ECHO)==1:
    end=time.time()
    
distance=round((end-start)*17150,2)
if distance<15:
    print(distance)
    GPIO.output(15,GPIO.HIGH)
    sleep(1)
    GPIO.output(15,GPIO.LOW)
else:
    print("Bring the object closer")
    
#distance only printed when dist<15 and buzzer also buzzes then
import Rpi.GPIO as GPIO
import time
from time import sleep
GPIO.setmode(GPIO.BOARD)
GPIO.setwarnings(False)

TRIG=8
ECHO=12

GPIO.setup(15,GPIO.OUT)
GPIO.setup(TRIG,GPIO.OUT)
GPIO.setup(ECHO,GPIO.IN)

P=GPIO.PWM(15,100)
P.start(0)

GPIO.output(TRIG,GPIO.LOW)
sleep(2)
GPIO.output(TRIG,GPIO.HIGH)
sleep(0.01)
GPIO.output(TRIG,GPIO.LOW)

while GPIO.input(ECHO)==0:
    start=time.time()
while GPIO.input(ECHO)==1:
    end=time.time()
    
distance=round((end-start)*17150,2)
if distance<15:
    print(distance)
    for x in range(0,100,10):
        P.ChangeDutyCycle(x)
        time.sleep(0.1)
    for x in range(100,0,-10):
        P.ChangeDutyCycle(x)
        time.sleep(0.1)
else:
    print("Bring the object closer")
    